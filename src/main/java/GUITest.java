import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import PcbFormat.BoxCbChain;
import PcbFormat.OOC;
import PcbFormat.PcbParseException;
import PcbFormat.StraightCbChain;

/**
 * Created by pca006132 on 2016/5/1.
 */
public class GUITest {
    private JTextArea textArea1;
    private JPanel jPanel;
    private JButton btnGenerate;
    private JCheckBox useBoxMode;
    private JTextArea tbCbCount;
    private static JFrame frame;

    public GUITest() {
        btnGenerate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                OOC ooc = new OOC();
                int[] coor = {0, 2, 0};
                String[] commands = null;
                try {
                    int cbNum = Integer.parseInt(tbCbCount.getText());
                    if (cbNum < 0)
                        throw new NumberFormatException();
                    StraightCbChain.setRowCbLimit(cbNum);
                    commands = ooc.getOOC(textArea1.getText(), (useBoxMode.isSelected() ?
                            new BoxCbChain(coor) : new StraightCbChain(coor)));
                } catch (PcbParseException ex) {
                    JOptionPane.showMessageDialog(frame, ex.getMessage(), "错误", JOptionPane.ERROR_MESSAGE);
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "每行CB数需要是>=0的整数", "错误", JOptionPane.ERROR_MESSAGE);
                }
                for (String command : commands) {
                    textArea1.append("\n\n" + command);
                }
                String message = ooc.checkForCondDir();
                if (!(message.length() == 0))
                    JOptionPane.showMessageDialog(frame, message, "警告", JOptionPane.WARNING_MESSAGE);
            }
        });
    }

    public static void main(String[] args) {
        frame = new JFrame("GUITest");
        frame.setContentPane(new GUITest().jPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setSize(new Dimension(800, 500));
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        jPanel = new JPanel();
        jPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        jPanel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(scrollPane1.getFont().getName(), scrollPane1.getFont().getStyle(), scrollPane1.getFont().getSize())));
        textArea1 = new JTextArea();
        textArea1.setColumns(0);
        textArea1.setLineWrap(true);
        scrollPane1.setViewportView(textArea1);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        jPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        btnGenerate = new JButton();
        btnGenerate.setText("Generate");
        panel1.add(btnGenerate);
        useBoxMode = new JCheckBox();
        useBoxMode.setSelected(false);
        useBoxMode.setText("使用盒子模式");
        panel1.add(useBoxMode);
        tbCbCount = new JTextArea();
        tbCbCount.setColumns(5);
        tbCbCount.setRows(0);
        tbCbCount.setText("0");
        tbCbCount.setToolTipText("每行CB数(一般模式)");
        panel1.add(tbCbCount);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return jPanel;
    }
}
